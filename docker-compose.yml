name: ft_transcendence
services:
  db:
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    env_file:
      - .env
    container_name: db
    volumes:
      - ~/.sgoinfre/transcendence/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${NODE_ENV:-production}
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/frontend/src
    networks:
      - app-network
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: ./frontend/src
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: ${NODE_ENV:-production}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./backend/src:/app/backend/src
    networks:
      - app-network
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: ./backend/src

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "5050:80"
    profiles: ["dev"]
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
